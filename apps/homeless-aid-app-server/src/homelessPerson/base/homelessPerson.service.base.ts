/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, HomelessPerson as PrismaHomelessPerson } from "@prisma/client";

export class HomelessPersonServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HomelessPersonCountArgs, "select">
  ): Promise<number> {
    return this.prisma.homelessPerson.count(args);
  }

  async homelessPeople(
    args: Prisma.HomelessPersonFindManyArgs
  ): Promise<PrismaHomelessPerson[]> {
    return this.prisma.homelessPerson.findMany(args);
  }
  async homelessPerson(
    args: Prisma.HomelessPersonFindUniqueArgs
  ): Promise<PrismaHomelessPerson | null> {
    return this.prisma.homelessPerson.findUnique(args);
  }
  async createHomelessPerson(
    args: Prisma.HomelessPersonCreateArgs
  ): Promise<PrismaHomelessPerson> {
    return this.prisma.homelessPerson.create(args);
  }
  async updateHomelessPerson(
    args: Prisma.HomelessPersonUpdateArgs
  ): Promise<PrismaHomelessPerson> {
    return this.prisma.homelessPerson.update(args);
  }
  async deleteHomelessPerson(
    args: Prisma.HomelessPersonDeleteArgs
  ): Promise<PrismaHomelessPerson> {
    return this.prisma.homelessPerson.delete(args);
  }
}
