/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PublicUser as PrismaPublicUser } from "@prisma/client";

export class PublicUserServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PublicUserCountArgs, "select">
  ): Promise<number> {
    return this.prisma.publicUser.count(args);
  }

  async publicUsers(
    args: Prisma.PublicUserFindManyArgs
  ): Promise<PrismaPublicUser[]> {
    return this.prisma.publicUser.findMany(args);
  }
  async publicUser(
    args: Prisma.PublicUserFindUniqueArgs
  ): Promise<PrismaPublicUser | null> {
    return this.prisma.publicUser.findUnique(args);
  }
  async createPublicUser(
    args: Prisma.PublicUserCreateArgs
  ): Promise<PrismaPublicUser> {
    return this.prisma.publicUser.create(args);
  }
  async updatePublicUser(
    args: Prisma.PublicUserUpdateArgs
  ): Promise<PrismaPublicUser> {
    return this.prisma.publicUser.update(args);
  }
  async deletePublicUser(
    args: Prisma.PublicUserDeleteArgs
  ): Promise<PrismaPublicUser> {
    return this.prisma.publicUser.delete(args);
  }
}
